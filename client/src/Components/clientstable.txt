import React, {useState, useEffect} from 'react';
import Table from '@mui/material/Table';
import TableBody from '@mui/material/TableBody';
import TableCell, {tableCellClasses} from '@mui/material/TableCell';
import TableContainer from '@mui/material/TableContainer';
import TableHead from '@mui/material/TableHead';
import TableRow from '@mui/material/TableRow';
import Paper from '@mui/material/Paper';
import {styled} from '@mui/material/styles';
import {makeStyles} from '@material-ui/core/styles';
import Addpayment from './Addpayment';
import Updelete from './Updelete';
import Duedate from '../Components/Duedate';
import Axios from 'axios';
import PaymentsList from './Paymentslist';
import Interest from './Interest';
import Status from './Status';
import { useDispatch } from 'react-redux'
import getClients from '../Slice/client-slice'



const useStyles = makeStyles ({
  previewContainer: {
    padding: '20px',
    borderRadius: '5px',
    boxShadow: 'rgba(255, 255, 255, 0.1) 0px 1px 1px 0px inset, rgba(50, 50, 93, 0.25) 0px 50px 100px -20px, rgba(0, 0, 0, 0.3) 0px 30px 60px -30px',
  },
  tableBody: {},
  tableRowBody: {},
  nameRow: {
    color: 'red',
  },
  paymentDetails: {
    display: 'flex',
  },
  tableHeader: {
    display: 'flex',
    alignContent: 'center',
    justifyContent: 'center'
  } 

});

const StyledTableCell = styled (TableCell) (({theme}) => ({
  [`&.${tableCellClasses.head}`]: {
    //backgroundColor: theme.palette.common.black,
    fontSize: '1.6vmin',
    color: theme.palette.common.black,
    fontFamily: 'var(--font-spartan)',
    fontWeight: 800,
  },
  [`&.${tableCellClasses.body}`]: {
    fontSize: '1.5vmin',
    fontFamily: 'var(--font-spartan)',
    fontWeight: 600,
  },
}));

const StyledTableRow = styled (TableRow) (({theme}) => ({
  '&:nth-of-type(odd)': {
    backgroundColor: theme.palette.action.hover,
  },
  // hide last border
  '&:last-child td, &:last-child th': {
    border: 0,
  },
}));

const Clientstable = () => {
  const dispatch = useDispatch()
  const [newData, setNewData] = useState ([
    {
      name: '---',
      _id: '---',
      date: '---',
      amount: '---',
      duration: '---',
  }
  ]);
  useEffect (() => {
    getData()
    const interval=setInterval(()=>{
      getData()
     },10000)
     return()=>clearInterval(interval)
     
  }, []);
  
  function getData() {
   Axios.get ('http://localhost:3001/read')
      .then (res => {
      setNewData (res.data);
    });
  }

  const classes = useStyles();
  

  return (
    <div className={classes.previewContainer}>
    <div className={classes.tableHeader}><h1 className={classes.tableTitle}>Clients Table</h1></div>
      <TableContainer component={Paper}>
        <Table sx={{minWidth: 650}} size="small" aria-label="a dense table">
          <TableHead className={classes.tableHead}>
            <TableRow>
            <StyledTableCell align="center">ID</StyledTableCell>
            <StyledTableCell align="center">Date Issued</StyledTableCell>
              <StyledTableCell align="center">Name</StyledTableCell>
              <StyledTableCell align="center">Amount</StyledTableCell>
              <StyledTableCell align="center">Loan Tenure</StyledTableCell>
              <StyledTableCell align="center">Due-Date</StyledTableCell>
              <StyledTableCell align="center">Add Payment</StyledTableCell>
              <StyledTableCell align="center">Update | Delete</StyledTableCell>
              <StyledTableCell align="center">Total Payments</StyledTableCell>
              <StyledTableCell align="center">List of Payments</StyledTableCell>
              <StyledTableCell align="center">Daily Juice</StyledTableCell>
              <StyledTableCell align="center">Status</StyledTableCell>
            </TableRow>
          </TableHead>
          <TableBody>
            {newData.map (clients => (
              <StyledTableRow
                key={clients.name}
                sx={{'&:last-child td, &:last-child th': {border: 0}}}
              >
                <StyledTableCell
                  align="center"
                  className={classes.tableBody}
                  component="th"
                  scope="row"
                >
                  {clients._id}
                  </StyledTableCell>
                  <StyledTableCell align="center">{clients.date}</StyledTableCell>
                <StyledTableCell align="center">{clients.name}</StyledTableCell>
                <StyledTableCell align="center">
                  {clients.amount}
                </StyledTableCell>
                <StyledTableCell align="center">
                  {clients.duration}
                </StyledTableCell>
                <StyledTableCell align="center">
                  <Duedate
                    clientDate={clients.date}
                    clientDuration={clients.duration}
                  />
                </StyledTableCell>
                <StyledTableCell align="center">
                  <Addpayment clientId={clients._id} />
                </StyledTableCell>
                <StyledTableCell align="center">
                  <Updelete clientId={clients._id} />
                </StyledTableCell>
                <StyledTableCell align="center">Totals</StyledTableCell>
                <StyledTableCell align="center">
                  <PaymentsList clientsPayments={clients.payment}/>
                </StyledTableCell>
                <StyledTableCell align="center">
                  <Interest amount={clients.amount} />
                </StyledTableCell>
                <StyledTableCell align="center">
                  <Status amount={clients.amount} />
                </StyledTableCell>
              </StyledTableRow>
            ))}
          </TableBody>
        </Table>
      </TableContainer>



      
      <div>

      </div>
  </div>
    
    
  );
};

export default Clientstable;
